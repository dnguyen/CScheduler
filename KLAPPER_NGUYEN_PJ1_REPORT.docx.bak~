<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="16" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-US; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.generator">AbiWord</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="No Spacing" basedon="Normal"/>
<s type="P" name="Normal" basedon="Normal" followedby="Current Settings" props="lang:ar-SA; font-size:12.000000pt; font-family:Times New Roman"/>
<s type="P" name="header" basedon="_Normal" props="tabstops:3.000000in/C0,6.000000in/R0"/>
<s type="P" name="_Normal" basedon="Normal"/>
<s type="C" name="Default Paragraph Font" basedon="Normal"/>
<s type="C" name="Footer Char" basedon="Default Paragraph Font"/>
<s type="C" name="Header Char" basedon="Default Paragraph Font"/>
<s type="P" name="No List" basedon="Normal"/>
<s type="P" name="Normal Table" basedon="Normal"/>
<s type="C" name="apple-converted-space" basedon="Default Paragraph Font"/>
<s type="P" name="footer" basedon="_Normal" props="tabstops:3.000000in/C0,6.000000in/R0"/>
</styles>
<pagesize pagetype="Letter" orientation="portrait" width="8.500000" height="11.000000" units="in" page-scale="1.000000"/>
<section header="0" xid="7" props="page-margin-right:1.250000in; column-line:off; page-margin-left:1.250000in; columns:1; page-margin-top:1.000000in; page-margin-bottom:1.000000in">
<p style="No Spacing" xid="8" props="bgcolor:FFFFFF"><bookmark type="start" name="_GoBack" xid="9"/>	In this project, Dylan and I worked to implement four thread schedulers for a uni-processor environment: First Come First Served (FCFS) - no preemption, Shortest Remaining Time First (SRTF) - with preemption, Priority Based Scheduling (PBS) - with preemption, and Multi Level Feedback Queue (MLFQ) - with preemption and ageing. The FCFS scheduling scheme is non-preemption based and schedules the threads based on who arrives first at the scheduler. The SRTF scheduling scheme is preemption based and schedules the threads based on who has the least 'remainingTime' value. When two or more threads have the same 'remainingTime' value, then the thread with least 'currentTime' is chosen for scheduling. The PBS scheduling scheme is preemption based and schedules the threads based on who has the highest priority. If two or more threads have the same priority value, then the thread with least 'currentTime' is chosen for scheduling. The MLFQ scheduling scheme is preemption based with multi-level feedback queues. The READY queue is a multi-level queue with 5 levels. The time quantum for the 5 levels (starting from the highest level) is 5, 10, 15, 20, and 25 time units respectively. Threads initially join the READY queue at the highest level. When a thread completes its time quantum on a particular level, it is moved to the next lower level. The scheduler selects threads from a lower level queue only when there are no threads in any of the higher levels. A thread entering the READY queue at the highest level will preempt threads at the lower levels at the next integral time unit. Within a level, we use FCFS to select the threads. We used round-robin at the last level. <bookmark type="end" name="_GoBack" xid="10"/></p>
<p style="No Spacing" xid="11"><c></c></p>
<p style="No Spacing" xid="4">Contributions</p>
<p style="No Spacing" xid="1">Dylan Nguyen: FCFS, MLFQ, synchronizing global time</p>
<p style="No Spacing" xid="2">Jacob Klapper: PBS, SRTF, queue inserts</p>
</section>
<section type="header" id="0" xid="12">
<p style="header" xid="13">CMPSC 473		10/14/14</p>
<p style="header" xid="14">Project 1</p>
<p style="header" xid="15">Dylan Nguyen &amp; Jacob Klapper</p>
<p style="header" xid="16"></p>
</section>
</abiword>
